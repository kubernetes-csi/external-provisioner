
# Gopkg.toml example
#
# Refer to https://github.com/golang/dep/blob/master/docs/Gopkg.toml.md
# for detailed Gopkg.toml documentation.
#
# required = ["github.com/user/thing/cmd/thing"]
# ignored = ["github.com/user/project/pkgX", "bitbucket.org/user/project/pkgA/pkgY"]
#
# [[constraint]]
#   name = "github.com/user/project"
#   version = "1.0.0"
#
# [[constraint]]
#   name = "github.com/user/project2"
#   branch = "dev"
#   source = "github.com/myfork/project2"
#
# [[override]]
#  name = "github.com/x/y"
#  version = "2.4.0"

# This selects the latest 1.x.y version.
[[constraint]]
  name = "github.com/container-storage-interface/spec"
  version = "1.0"

[[constraint]]
  name = "k8s.io/csi-translation-lib"
  branch = "master"

[[constraint]]
  name = "github.com/kubernetes-csi/csi-test"
  version = "v2.0.0"

[[constraint]]
  name = "sigs.k8s.io/sig-storage-lib-external-provisioner"
  version = "v4.0.0"

# TODO: remove when released
[[constraint]]
  name = "github.com/kubernetes-csi/external-snapshotter"
  branch = "master"

# We need a version which does not use glog, because pulling in glog clashes
# with klog.Init. Anything >= 1.12 is fine, but we can't specify that
# because of the lack of semantic versioning in Kubernetes. Therefore we
# have to pick a certain release, otherwise we (more or less randomly) end
# up with something older or master.
[[override]]
  name = "k8s.io/api"
  branch = "release-1.15"

[[constraint]]
  name = "k8s.io/apiserver"
  version = "kubernetes-1.14.1"

[[constraint]]
  name = "k8s.io/component-base"
  version = "kubernetes-1.14.0"

[[constraint]]
  name = "k8s.io/client-go"
  version = "kubernetes-1.14.0"

[[constraint]]
  name = "github.com/kubernetes-csi/csi-lib-utils"
  version = ">=0.6.1"

[prune]
  non-go = true
  go-tests = true
  unused-packages = true

